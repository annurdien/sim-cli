name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24.x

    - name: Download dependencies
      run: go mod download

    - name: Run tests with coverage
      run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Generate coverage report
      run: go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          coverage.out
          coverage.html

    - name: Check test coverage
      run: |
        COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
        echo "Total test coverage: $COVERAGE%"
        if (( $(echo "$COVERAGE < 70" | bc -l) )); then
          echo "❌ Test coverage is below 70%"
          exit 1
        else
          echo "✅ Test coverage is above 70%"
        fi

    - name: Run go mod verify
      run: go mod verify

    - name: Check for vulnerabilities
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

    - name: Check for outdated dependencies
      run: |
        go install github.com/psampaz/go-mod-outdated@latest
        go list -u -m -json all | go-mod-outdated -update -direct

  performance:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24.x

    - name: Run benchmarks
      run: |
        if go test -list . | grep -q "Benchmark"; then
          go test -bench=. -benchmem ./... > benchmark.txt
          cat benchmark.txt
        else
          echo "No benchmarks found"
        fi

    - name: Upload benchmark results
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: benchmark.txt
